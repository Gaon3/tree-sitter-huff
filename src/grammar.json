{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "huff",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_top_level_item"
      }
    },
    "_top_level_item": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "preprocessor"
        },
        {
          "type": "SYMBOL",
          "name": "solidity_function"
        },
        {
          "type": "SYMBOL",
          "name": "jump_label_definition"
        },
        {
          "type": "SYMBOL",
          "name": "macro_definition"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        }
      ]
    },
    "preprocessor": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#include"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "solidity_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#define"
        },
        {
          "type": "STRING",
          "value": "function"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "solidity_parameter_types"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "nonpayable"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "payable"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "pure"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "view"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "returns"
                },
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "solidity_return_types"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "STRING",
                  "value": ")"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "solidity_parameter_types": {
      "type": "PATTERN",
      "value": "[^)]*"
    },
    "solidity_return_types": {
      "type": "PATTERN",
      "value": "[^)]*"
    },
    "jump_label_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "label_name"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        }
      ]
    },
    "jump_label_reference": {
      "type": "SYMBOL",
      "name": "label_name"
    },
    "label_name": {
      "type": "PATTERN",
      "value": "[_a-z][_a-z0-9_]*"
    },
    "macro_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#define"
        },
        {
          "type": "STRING",
          "value": "macro"
        },
        {
          "type": "SYMBOL",
          "name": "macro_name"
        },
        {
          "type": "SYMBOL",
          "name": "parameter_list"
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "="
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "takes_clause"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "returns_clause"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "parameters"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameters": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "parameter"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "parameter"
              }
            ]
          }
        }
      ]
    },
    "takes_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "takes"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "returns_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "returns"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameter_usage": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "parameter": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "macro_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "macro_name"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "arguments"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "arguments": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "argument"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "argument"
              }
            ]
          }
        }
      ]
    },
    "argument": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "literal"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "parameter_usage"
        },
        {
          "type": "SYMBOL",
          "name": "jump_label_reference"
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "opcode"
              },
              {
                "type": "SYMBOL",
                "name": "literal"
              },
              {
                "type": "SYMBOL",
                "name": "parameter_usage"
              },
              {
                "type": "SYMBOL",
                "name": "macro_call"
              },
              {
                "type": "SYMBOL",
                "name": "comment"
              },
              {
                "type": "SYMBOL",
                "name": "jump_label_definition"
              },
              {
                "type": "SYMBOL",
                "name": "jump_label_reference"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "opcode": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "dup1"
        },
        {
          "type": "STRING",
          "value": "add"
        },
        {
          "type": "STRING",
          "value": "swap1"
        },
        {
          "type": "STRING",
          "value": "calldataload"
        },
        {
          "type": "STRING",
          "value": "shr"
        },
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "jump"
        },
        {
          "type": "STRING",
          "value": "jumpi"
        },
        {
          "type": "STRING",
          "value": "iszero"
        },
        {
          "type": "STRING",
          "value": "mstore"
        },
        {
          "type": "STRING",
          "value": "revert"
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "hex_literal"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "hex_literal": {
      "type": "PATTERN",
      "value": "0x[0-9a-fA-F]+"
    },
    "string": {
      "type": "PATTERN",
      "value": "\"[^\"]*\""
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[_a-zA-Z][_a-zA-Z0-9]*"
    },
    "macro_name": {
      "type": "PATTERN",
      "value": "[_A-Z][_A-Z0-9_]*"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "//"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
              },
              {
                "type": "STRING",
                "value": "/"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}